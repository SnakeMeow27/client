{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { deleteDeviceFromBasket } from \"../http/deviceAPI\";\nexport default class BasketStoreStore {\n  constructor() {\n    this._totalPrice = 0;\n    this._basket = [];\n    makeAutoObservable(this);\n  }\n\n  async setDeleteItemBasket(application) {\n    let isAuth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (isAuth) {\n      await deleteDeviceFromBasket(application.id).then(() => {\n        this._basket = this._basket.filter(item => item.id !== application.id);\n        this._totalPrice -= application.price * application.count;\n      });\n    } else {\n      this._basket = this._basket.filter(item => item.id !== application.id);\n      this._totalPrice -= application.price * application.count;\n      localStorage.setItem(\"basket\", JSON.stringify(this._basket));\n    }\n  }\n\n  setBasket(item) {\n    let isAuth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    const checkDeviceInBasket = this._basket.findIndex(application => application.id === item.id);\n\n    if (checkDeviceInBasket < 0) {\n      this._basket = [...this._basket, {\n        count: 1,\n        ...item\n      }];\n      let totalPrice = 0;\n\n      this._basket.forEach(application => totalPrice += Number(application.price * application.count));\n\n      this._totalPrice = totalPrice;\n    }\n\n    if (!isAuth) {\n      localStorage.setItem(\"basket\", JSON.stringify(this._basket));\n      console.log(\"Не зарегистрирован\");\n    }\n  }\n\n  setDeleteAllDeviceFromBasket() {\n    this._totalPrice = 0;\n    return this._basket = [];\n  }\n\n  setCountDevice(applicationId, action) {\n    let isAuth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    const itemInd = this._basket.findIndex(item => item.id === applicationId);\n\n    const itemInState = this._basket.find(device => device.id === applicationId);\n\n    if (action === \"+\") {\n      const newItem = { ...itemInState,\n        count: ++itemInState.count\n      };\n      this._basket = [...this._basket.slice(0, itemInd), newItem, ...this._basket.slice(itemInd + 1)];\n    } else {\n      const newItem = { ...itemInState,\n        count: itemInState.count === 1 ? 1 : --itemInState.count\n      };\n      this._basket = [...this._basket.slice(0, itemInd), newItem, ...this._basket.slice(itemInd + 1)];\n    }\n\n    if (!isAuth) {\n      localStorage.setItem(\"basket\", JSON.stringify(this._basket));\n    }\n\n    let totalPrice = 0;\n\n    this._basket.forEach(application => totalPrice += Number(application.price * application.count));\n\n    this._totalPrice = totalPrice;\n  }\n\n  resetBasket() {\n    this._basket = [];\n    this._totalPrice = 0;\n    localStorage.removeItem('application');\n  }\n\n  get Basket() {\n    return this._basket;\n  }\n\n  get Price() {\n    return this._totalPrice;\n  }\n\n}","map":{"version":3,"names":["makeAutoObservable","deleteDeviceFromBasket","BasketStoreStore","constructor","_totalPrice","_basket","setDeleteItemBasket","application","isAuth","id","then","filter","item","price","count","localStorage","setItem","JSON","stringify","setBasket","checkDeviceInBasket","findIndex","totalPrice","forEach","Number","console","log","setDeleteAllDeviceFromBasket","setCountDevice","applicationId","action","itemInd","itemInState","find","device","newItem","slice","resetBasket","removeItem","Basket","Price"],"sources":["C:/Users/danak/WebstormProjects/untitled/client/src/store/BasketStore.js"],"sourcesContent":["import {makeAutoObservable} from \"mobx\";\r\nimport {deleteDeviceFromBasket} from \"../http/deviceAPI\";\r\n\r\nexport default class BasketStoreStore {\r\n    constructor() {\r\n        this._totalPrice = 0;\r\n        this._basket = [];\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    async setDeleteItemBasket(application, isAuth = false) {\r\n        if(isAuth) {\r\n            await deleteDeviceFromBasket(application.id).then(() => {\r\n                this._basket = this._basket.filter(item => item.id !== application.id);\r\n                this._totalPrice -=  application.price * application.count;\r\n            });\r\n        } else {\r\n            this._basket = this._basket.filter(item => item.id !== application.id);\r\n            this._totalPrice -=  application.price * application.count;\r\n\r\n            localStorage.setItem(\"basket\", JSON.stringify(this._basket));\r\n        }\r\n    }\r\n\r\n    setBasket(item, isAuth = false) {\r\n        const checkDeviceInBasket = this._basket.findIndex(application => application.id === item.id);\r\n        if(checkDeviceInBasket < 0) {\r\n            this._basket = [...this._basket, { count: 1, ...item}];\r\n            let totalPrice = 0;\r\n            this._basket.forEach(application => totalPrice += Number(application.price * application.count));\r\n            this._totalPrice = totalPrice;\r\n        }\r\n\r\n        if(!isAuth) {\r\n            localStorage.setItem(\"basket\", JSON.stringify(this._basket));\r\n            console.log(\"Не зарегистрирован\")\r\n        }\r\n    }\r\n\r\n    setDeleteAllDeviceFromBasket() {\r\n        this._totalPrice = 0;\r\n        return this._basket = [];\r\n    }\r\n\r\n    setCountDevice(applicationId, action, isAuth = false) {\r\n        const itemInd = this._basket.findIndex(item => item.id === applicationId);\r\n        const itemInState = this._basket.find(device => device.id === applicationId);\r\n        if (action === \"+\") {\r\n            const newItem = {\r\n                ...itemInState,\r\n                count: ++itemInState.count\r\n            }\r\n            this._basket = [...this._basket.slice(0, itemInd), newItem, ...this._basket.slice(itemInd + 1)]\r\n        } else {\r\n            const newItem = {\r\n                ...itemInState,\r\n                count: itemInState.count === 1 ? 1 : --itemInState.count\r\n            }\r\n            this._basket = [...this._basket.slice(0, itemInd), newItem, ...this._basket.slice(itemInd + 1)]\r\n        }\r\n\r\n        if(!isAuth) {\r\n            localStorage.setItem(\"basket\", JSON.stringify(this._basket));\r\n        }\r\n\r\n        let totalPrice = 0;\r\n        this._basket.forEach(application => totalPrice += Number(application.price * application.count));\r\n        this._totalPrice = totalPrice;\r\n    }\r\n\r\n    resetBasket() {\r\n        this._basket = [];\r\n        this._totalPrice = 0;\r\n        localStorage.removeItem('application');\r\n    }\r\n\r\n\r\n    get Basket() {\r\n        return this._basket;\r\n    }\r\n\r\n    get Price() {\r\n        return this._totalPrice;\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}