{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Typography = _interopRequireDefault(require(\"@material-ui/core/Typography\"));\n\nvar _Collapse = _interopRequireDefault(require(\"@material-ui/core/Collapse\"));\n\nvar _styles = require(\"@material-ui/core/styles\");\n\nvar _utils = require(\"@material-ui/core/utils\");\n\nvar _TreeViewContext = _interopRequireDefault(require(\"../TreeView/TreeViewContext\"));\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\n\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: (0, _styles.alpha)(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: (0, _styles.alpha)(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nexports.styles = styles;\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onLabelClick = props.onLabelClick,\n      onIconClick = props.onIconClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? _Collapse.default : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onLabelClick\", \"onIconClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(_TreeViewContext.default),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = (0, _utils.useForkRef)(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = (0, _styles.useTheme)();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !event.defaultPrevented && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    if (addNodeToNodeMap) {\n      var childIds = [];\n      React.Children.forEach(children, function (child) {\n        if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", (0, _extends2.default)({\n    className: (0, _clsx.default)(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onIconClick,\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(_Typography.default, {\n    onClick: onLabelClick,\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, (0, _extends2.default)({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: _propTypes.default.node,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: _propTypes.default.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: _propTypes.default.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: _propTypes.default.node,\n\n  /**\n   * The tree node label.\n   */\n  label: _propTypes.default.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: _propTypes.default.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: _propTypes.default.func,\n\n  /**\n   * `onClick` handler for the icon container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onIconClick: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: _propTypes.default.func,\n\n  /**\n   * `onClick` handler for the label container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onLabelClick: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: _propTypes.default.func,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: _propTypes.default.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: _propTypes.default.object\n} : void 0;\n\nvar _default = (0, _styles.withStyles)(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);\n\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","styles","_extends2","_objectWithoutProperties2","React","_clsx","_propTypes","_Typography","_Collapse","_styles","_utils","_TreeViewContext","theme","root","listStyle","margin","padding","outline","WebkitTapHighlightColor","backgroundColor","palette","action","hover","alpha","primary","main","selectedOpacity","hoverOpacity","expanded","selected","group","marginLeft","content","width","display","alignItems","cursor","iconContainer","marginRight","flexShrink","justifyContent","fontSize","label","paddingLeft","position","isPrintableCharacter","str","length","match","TreeItem","forwardRef","props","ref","children","classes","className","collapseIcon","endIcon","expandIcon","iconProp","icon","nodeId","onClick","onLabelClick","onIconClick","onFocus","onKeyDown","onMouseDown","_props$TransitionComp","TransitionComponent","TransitionProps","other","_React$useContext","useContext","contextIcons","icons","focus","focusFirstNode","focusLastNode","focusNextNode","focusPreviousNode","focusByFirstCharacter","selectNode","selectRange","selectNextNode","selectPreviousNode","rangeSelectToFirst","rangeSelectToLast","selectAllNodes","expandAllSiblings","toggleExpansion","isExpanded","isFocused","isSelected","isTabbable","multiSelect","getParent","mapFirstChar","addNodeToNodeMap","removeNodeFromNodeMap","nodeRef","useRef","contentRef","handleRef","useForkRef","expandable","Boolean","Array","isArray","focused","tabbable","useTheme","defaultExpandIcon","defaultCollapseIcon","defaultParentIcon","defaultEndIcon","handleClick","event","multiple","shiftKey","ctrlKey","metaKey","defaultPrevented","end","handleMouseDown","preventDefault","handleNextArrow","handlePreviousArrow","parent","handleKeyDown","flag","key","altKey","currentTarget","target","ctrlPressed","current","stopPropagation","direction","toLowerCase","handleFocus","useEffect","childIds","Children","forEach","child","isValidElement","push","undefined","textContent","substring","ariaSelected","createElement","role","tabIndex","component","unmountOnExit","in","process","env","NODE_ENV","propTypes","node","object","string","isRequired","func","elementType","_default","withStyles","name"],"sources":["C:/Users/danak/WebstormProjects/untitled/client/node_modules/@material-ui/lab/TreeItem/TreeItem.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Typography = _interopRequireDefault(require(\"@material-ui/core/Typography\"));\n\nvar _Collapse = _interopRequireDefault(require(\"@material-ui/core/Collapse\"));\n\nvar _styles = require(\"@material-ui/core/styles\");\n\nvar _utils = require(\"@material-ui/core/utils\");\n\nvar _TreeViewContext = _interopRequireDefault(require(\"../TreeView/TreeViewContext\"));\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: (0, _styles.alpha)(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: (0, _styles.alpha)(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nexports.styles = styles;\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onLabelClick = props.onLabelClick,\n      onIconClick = props.onIconClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? _Collapse.default : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onLabelClick\", \"onIconClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(_TreeViewContext.default),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = (0, _utils.useForkRef)(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = (0, _styles.useTheme)();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !event.defaultPrevented && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    if (addNodeToNodeMap) {\n      var childIds = [];\n      React.Children.forEach(children, function (child) {\n        if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", (0, _extends2.default)({\n    className: (0, _clsx.default)(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onIconClick,\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(_Typography.default, {\n    onClick: onLabelClick,\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, (0, _extends2.default)({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: _propTypes.default.node,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: _propTypes.default.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: _propTypes.default.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: _propTypes.default.node,\n\n  /**\n   * The tree node label.\n   */\n  label: _propTypes.default.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: _propTypes.default.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: _propTypes.default.func,\n\n  /**\n   * `onClick` handler for the icon container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onIconClick: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: _propTypes.default.func,\n\n  /**\n   * `onClick` handler for the label container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onLabelClick: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: _propTypes.default.func,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: _propTypes.default.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: _propTypes.default.object\n} : void 0;\n\nvar _default = (0, _styles.withStyles)(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}