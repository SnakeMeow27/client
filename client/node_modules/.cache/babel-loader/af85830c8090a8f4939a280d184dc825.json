{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nimport jwt_decode from \"jwt-decode\";\nexport const createType = async type => {\n  const {\n    data\n  } = await $authHost.post('api/type/', type);\n  return data;\n};\nexport const fetchTypes = async () => {\n  const {\n    data\n  } = await $host.get('api/type/');\n  return data;\n};\nexport const createDeveloper = async developer => {\n  const {\n    data\n  } = await $authHost.post('api/developer/', developer);\n  return data;\n};\nexport const fetchDevelopers = async () => {\n  const {\n    data\n  } = await $host.get('api/developer/');\n  return data;\n};\nexport const createApplication = async application => {\n  const {\n    data\n  } = await $authHost.post('api/application/', application);\n  return data;\n};\nexport const fetchApplications = async function (typeId, brandId, page) {\n  let limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n  const {\n    data\n  } = await $host.get('api/application/', {\n    params: {\n      typeId,\n      brandId,\n      page,\n      limit\n    }\n  });\n  return data;\n};\nexport const fetchOneApplication = async id => {\n  const {\n    data\n  } = await $host.get('api/application/' + id);\n  return data;\n};","map":{"version":3,"names":["$authHost","$host","jwt_decode","createType","type","data","post","fetchTypes","get","createDeveloper","developer","fetchDevelopers","createApplication","application","fetchApplications","typeId","brandId","page","limit","params","fetchOneApplication","id"],"sources":["C:/Users/danak/WebstormProjects/untitled/client/src/http/deviceAPI.js"],"sourcesContent":["import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type/', type)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type/')\r\n    return data\r\n}\r\n\r\nexport const createDeveloper = async (developer) => {\r\n    const {data} = await $authHost.post('api/developer/', developer)\r\n    return data\r\n}\r\n\r\nexport const fetchDevelopers= async () => {\r\n    const {data} = await $host.get('api/developer/', )\r\n    return data\r\n}\r\n\r\nexport const createApplication = async (application) => {\r\n    const {data} = await $authHost.post('api/application/', application)\r\n    return data\r\n}\r\n\r\nexport const fetchApplications = async (typeId, brandId, page, limit= 5) => {\r\n    const {data} = await $host.get('api/application/', {params: {\r\n            typeId, brandId, page, limit\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneApplication = async (id) => {\r\n    const {data} = await $host.get('api/application/' + id)\r\n    return data\r\n}"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,KAAnB,QAA+B,SAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;EACtC,MAAM;IAACC;EAAD,IAAS,MAAML,SAAS,CAACM,IAAV,CAAe,WAAf,EAA4BF,IAA5B,CAArB;EACA,OAAOC,IAAP;AACH,CAHM;AAKP,OAAO,MAAME,UAAU,GAAG,YAAY;EAClC,MAAM;IAACF;EAAD,IAAS,MAAMJ,KAAK,CAACO,GAAN,CAAU,WAAV,CAArB;EACA,OAAOH,IAAP;AACH,CAHM;AAKP,OAAO,MAAMI,eAAe,GAAG,MAAOC,SAAP,IAAqB;EAChD,MAAM;IAACL;EAAD,IAAS,MAAML,SAAS,CAACM,IAAV,CAAe,gBAAf,EAAiCI,SAAjC,CAArB;EACA,OAAOL,IAAP;AACH,CAHM;AAKP,OAAO,MAAMM,eAAe,GAAE,YAAY;EACtC,MAAM;IAACN;EAAD,IAAS,MAAMJ,KAAK,CAACO,GAAN,CAAU,gBAAV,CAArB;EACA,OAAOH,IAAP;AACH,CAHM;AAKP,OAAO,MAAMO,iBAAiB,GAAG,MAAOC,WAAP,IAAuB;EACpD,MAAM;IAACR;EAAD,IAAS,MAAML,SAAS,CAACM,IAAV,CAAe,kBAAf,EAAmCO,WAAnC,CAArB;EACA,OAAOR,IAAP;AACH,CAHM;AAKP,OAAO,MAAMS,iBAAiB,GAAG,gBAAOC,MAAP,EAAeC,OAAf,EAAwBC,IAAxB,EAA2C;EAAA,IAAbC,KAAa,uEAAN,CAAM;EACxE,MAAM;IAACb;EAAD,IAAS,MAAMJ,KAAK,CAACO,GAAN,CAAU,kBAAV,EAA8B;IAACW,MAAM,EAAE;MACpDJ,MADoD;MAC5CC,OAD4C;MACnCC,IADmC;MAC7BC;IAD6B;EAAT,CAA9B,CAArB;EAGA,OAAOb,IAAP;AACH,CALM;AAOP,OAAO,MAAMe,mBAAmB,GAAG,MAAOC,EAAP,IAAc;EAC7C,MAAM;IAAChB;EAAD,IAAS,MAAMJ,KAAK,CAACO,GAAN,CAAU,qBAAqBa,EAA/B,CAArB;EACA,OAAOhB,IAAP;AACH,CAHM"},"metadata":{},"sourceType":"module"}