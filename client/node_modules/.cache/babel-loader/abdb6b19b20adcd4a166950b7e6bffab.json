{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danak\\\\WebstormProjects\\\\untitled\\\\client\\\\src\\\\pages\\\\Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport TypeBar from \"../components/TypeBar\";\nimport DeveloperBar from \"../components/DeveloperBar\";\nimport ApplicationList from \"../components/ApplicationList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchApplications, fetchDevelopers, fetchTypes } from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shop = _s(observer(_c = _s(() => {\n  _s();\n\n  const {\n    application\n  } = useContext(Context);\n  useEffect(() => {\n    fetchTypes().then(data => application.setTypes(data));\n    fetchDevelopers().then(data => application.setDevelopers(data));\n    fetchApplications(null, null, 1, 12).then(data => {\n      application.setApplications(data.rows);\n      application.setTotalCount(data.count);\n    });\n  }, []);\n  useEffect(() => {\n    if (application.selectedType === \"all\") {\n      fetchApplications(null, application.selectedDeveloper.id, application.page, 12).then(data => {\n        application.setApplications(data.rows);\n        application.setTotalCount(data.count);\n      });\n    } else {\n      fetchApplications(application.selectedType.id, application.selectedDeveloper.id, application.page, 12).then(data => {\n        application.setApplications(data.rows);\n        application.setTotalCount(data.count);\n      });\n    }\n  }, [application.page, application.selectedType, application.selectedDeveloper]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TypeBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(DeveloperBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(ApplicationList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), \"4\", /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}, \"dLBoiRlCOvheE7y+hvkXxgFoZqM=\")), \"dLBoiRlCOvheE7y+hvkXxgFoZqM=\");\n\n_c2 = Shop;\nexport default Shop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"names":["React","useContext","useEffect","Col","Container","Row","TypeBar","DeveloperBar","ApplicationList","observer","Context","fetchApplications","fetchDevelopers","fetchTypes","Pages","Shop","application","then","data","setTypes","setDevelopers","setApplications","rows","setTotalCount","count","selectedType","selectedDeveloper","id","page"],"sources":["C:/Users/danak/WebstormProjects/untitled/client/src/pages/Shop.js"],"sourcesContent":["import React, {useContext, useEffect} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport DeveloperBar from \"../components/DeveloperBar\";\r\nimport ApplicationList from \"../components/ApplicationList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchApplications, fetchDevelopers, fetchTypes} from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Shop = observer(() => {\r\n    const {application} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n      fetchTypes().then(data => application.setTypes(data));\r\n        fetchDevelopers().then(data=> application.setDevelopers(data));\r\n        fetchApplications(null, null, 1, 12).then(data=> {\r\n            application.setApplications(data.rows);\r\n            application.setTotalCount(data.count);\r\n    })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (application.selectedType === \"all\"){\r\n            fetchApplications(null, application.selectedDeveloper.id, application.page, 12). then (data => {\r\n                application.setApplications(data.rows);\r\n                application.setTotalCount(data.count)\r\n            });\r\n        }\r\n        else {\r\n            fetchApplications(application.selectedType.id, application.selectedDeveloper.id, application.page, 12).then(data=> {\r\n                application.setApplications(data.rows)\r\n                application.setTotalCount(data.count)\r\n            });\r\n        }\r\n\r\n    }, [application.page, application.selectedType, application.selectedDeveloper], );\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar></TypeBar>\r\n                </Col>\r\n                <Col md={9}>\r\n                   <DeveloperBar></DeveloperBar>\r\n                    <ApplicationList></ApplicationList>4\r\n                    <Pages></Pages>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAAQC,GAAR,EAAaC,SAAb,EAAwBC,GAAxB,QAAkC,iBAAlC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAAQC,iBAAR,EAA2BC,eAA3B,EAA4CC,UAA5C,QAA6D,mBAA7D;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,IAAI,MAAGN,QAAQ,SAAC,MAAM;EAAA;;EACxB,MAAM;IAACO;EAAD,IAAgBf,UAAU,CAACS,OAAD,CAAhC;EAEAR,SAAS,CAAC,MAAM;IACdW,UAAU,GAAGI,IAAb,CAAkBC,IAAI,IAAIF,WAAW,CAACG,QAAZ,CAAqBD,IAArB,CAA1B;IACEN,eAAe,GAAGK,IAAlB,CAAuBC,IAAI,IAAGF,WAAW,CAACI,aAAZ,CAA0BF,IAA1B,CAA9B;IACAP,iBAAiB,CAAC,IAAD,EAAO,IAAP,EAAa,CAAb,EAAgB,EAAhB,CAAjB,CAAqCM,IAArC,CAA0CC,IAAI,IAAG;MAC7CF,WAAW,CAACK,eAAZ,CAA4BH,IAAI,CAACI,IAAjC;MACAN,WAAW,CAACO,aAAZ,CAA0BL,IAAI,CAACM,KAA/B;IACP,CAHG;EAIH,CAPQ,EAON,EAPM,CAAT;EASAtB,SAAS,CAAC,MAAM;IACZ,IAAIc,WAAW,CAACS,YAAZ,KAA6B,KAAjC,EAAuC;MACnCd,iBAAiB,CAAC,IAAD,EAAOK,WAAW,CAACU,iBAAZ,CAA8BC,EAArC,EAAyCX,WAAW,CAACY,IAArD,EAA2D,EAA3D,CAAjB,CAAiFX,IAAjF,CAAuFC,IAAI,IAAI;QAC3FF,WAAW,CAACK,eAAZ,CAA4BH,IAAI,CAACI,IAAjC;QACAN,WAAW,CAACO,aAAZ,CAA0BL,IAAI,CAACM,KAA/B;MACH,CAHD;IAIH,CALD,MAMK;MACDb,iBAAiB,CAACK,WAAW,CAACS,YAAZ,CAAyBE,EAA1B,EAA8BX,WAAW,CAACU,iBAAZ,CAA8BC,EAA5D,EAAgEX,WAAW,CAACY,IAA5E,EAAkF,EAAlF,CAAjB,CAAuGX,IAAvG,CAA4GC,IAAI,IAAG;QAC/GF,WAAW,CAACK,eAAZ,CAA4BH,IAAI,CAACI,IAAjC;QACAN,WAAW,CAACO,aAAZ,CAA0BL,IAAI,CAACM,KAA/B;MACH,CAHD;IAIH;EAEJ,CAdQ,EAcN,CAACR,WAAW,CAACY,IAAb,EAAmBZ,WAAW,CAACS,YAA/B,EAA6CT,WAAW,CAACU,iBAAzD,CAdM,CAAT;EAgBA,oBACI,QAAC,SAAD;IAAA,uBACI,QAAC,GAAD;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI,QAAC,GAAD;QAAK,EAAE,EAAE,CAAT;QAAA,uBACI,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII,QAAC,GAAD;QAAK,EAAE,EAAE,CAAT;QAAA,wBACG,QAAC,YAAD;UAAA;UAAA;UAAA;QAAA,QADH,eAEI,QAAC,eAAD;UAAA;UAAA;UAAA;QAAA,QAFJ,oBAGI,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CA1CoB,kCAAX,iCAAV;;MAAMX,I;AA4CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}