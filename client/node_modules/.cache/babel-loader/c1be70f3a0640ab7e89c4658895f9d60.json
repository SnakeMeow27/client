{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danak\\\\WebstormProjects\\\\untitled\\\\client\\\\src\\\\pages\\\\Orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Col, Container, Dropdown, ListGroup, Pagination, Row, Spinner } from \"react-bootstrap\";\nimport { fetchOrders } from \"../http/ordersAPI\";\nimport ItemOneOrderInAdmin from \"../components/itemOneorderInAdmin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = () => {\n  _s();\n\n  var _orders$rows;\n\n  const [loading, setLoading] = useState(false);\n  const [orders, setOrders] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [count, setCount] = useState(0);\n  const [filter, setFilter] = useState(\"All\");\n  const [rerender, setRerender] = useState(false); //pagination\n\n  const limit = 5;\n  const pageCount = Math.ceil(Number(count) / limit);\n  const pages = [];\n  useEffect(() => {\n    fetchOrders({\n      limit,\n      page: 1\n    }).then(data => {\n      setOrders(data);\n      setLoading(false);\n      setCount(data.count);\n    });\n  }, []);\n  useEffect(() => {\n    setLoading(true);\n    fetchOrders({\n      limit,\n      page: currentPage\n    }).then(data => {\n      setOrders(data);\n      setLoading(false);\n    });\n  }, [currentPage]);\n  useEffect(() => {\n    setLoading(true);\n    fetchOrders({\n      limit,\n      page: 1,\n      complete: filter\n    }).then(data => {\n      setOrders(data);\n      setLoading(false);\n      setCount(data.count);\n      setCurrentPage(1);\n    });\n  }, [filter]); //re-render after change status, or delete some order\n\n  useEffect(() => {\n    setLoading(true);\n    fetchOrders({\n      limit,\n      page: currentPage,\n      complete: filter\n    }).then(data => {\n      setOrders(data);\n      setLoading(false);\n      setCount(data.count);\n      setCurrentPage(1);\n    });\n  }, [rerender]);\n\n  const reRender = () => {\n    setRerender(!rerender);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"grow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this);\n  }\n\n  for (let number = 1; number < pageCount + 1; number++) {\n    pages.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n      active: number === currentPage,\n      onClick: () => setCurrentPage(number),\n      children: number\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        className: \"mt-3 d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mr-3\",\n          children: \"Filter:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"success\",\n            id: \"dropdown-basic\",\n            children: filter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [filter === \"all\" ? /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              disabled: true,\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => setFilter(\"all\"),\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 95\n            }, this), filter === \"completed\" ? /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              disabled: true,\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 55\n            }, this) : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => setFilter(\"completed\"),\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 107\n            }, this), filter === \"not-completed\" ? /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              disabled: true,\n              children: \"Not Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 59\n            }, this) : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => setFilter(\"not-completed\"),\n              children: \"Not Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 115\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: (_orders$rows = orders.rows) === null || _orders$rows === void 0 ? void 0 : _orders$rows.map(_ref => {\n        let {\n          id,\n          complete,\n          mobile,\n          createdAt,\n          updatedAt,\n          userId\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(ItemOneOrderInAdmin, {\n          id: id,\n          complete: complete,\n          mobile: mobile,\n          createdAt: createdAt,\n          updatedAt: updatedAt,\n          userId: userId,\n          reRender: reRender\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      size: \"sm\",\n      className: \"mt-4 mb-4\",\n      style: {\n        margin: \"0 auto\"\n      },\n      children: pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Orders, \"rbwyGOcckDPElEW0+8Ats52lxo0=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useEffect","useState","Col","Container","Dropdown","ListGroup","Pagination","Row","Spinner","fetchOrders","ItemOneOrderInAdmin","Orders","loading","setLoading","orders","setOrders","currentPage","setCurrentPage","count","setCount","filter","setFilter","rerender","setRerender","limit","pageCount","Math","ceil","Number","pages","page","then","data","complete","reRender","number","push","rows","map","id","mobile","createdAt","updatedAt","userId","margin"],"sources":["C:/Users/danak/WebstormProjects/untitled/client/src/pages/Orders.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Col, Container, Dropdown, ListGroup, Pagination, Row, Spinner} from \"react-bootstrap\";\r\nimport {fetchOrders} from \"../http/ordersAPI\";\r\nimport ItemOneOrderInAdmin from \"../components/itemOneorderInAdmin\";\r\n\r\nconst Orders = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [orders, setOrders] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [filter, setFilter] = useState(\"All\");\r\n    const [rerender, setRerender] = useState(false);\r\n\r\n    //pagination\r\n    const limit = 5;\r\n    const pageCount = Math.ceil(Number(count) / limit);\r\n    const pages = [];\r\n\r\n    useEffect(() => {\r\n        fetchOrders({limit, page: 1}).then(data => {\r\n            setOrders(data);\r\n            setLoading(false);\r\n            setCount(data.count);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetchOrders({limit, page: currentPage}).then(data => {\r\n            setOrders(data);\r\n            setLoading(false);\r\n        })\r\n    }, [currentPage]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetchOrders({limit, page: 1, complete: filter}).then(data => {\r\n            setOrders(data);\r\n            setLoading(false);\r\n            setCount(data.count);\r\n            setCurrentPage(1);\r\n        })\r\n    }, [filter]);\r\n\r\n    //re-render after change status, or delete some order\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetchOrders({limit, page: currentPage, complete: filter}).then(data => {\r\n            setOrders(data);\r\n            setLoading(false);\r\n            setCount(data.count);\r\n            setCurrentPage(1);\r\n        })\r\n    }, [rerender]);\r\n\r\n    const reRender = () => {\r\n        setRerender(!rerender);\r\n    }\r\n\r\n    if(loading) {\r\n        return <Spinner animation=\"grow\"/>\r\n    }\r\n\r\n    for (let number = 1; number < pageCount + 1; number++) {\r\n        pages.push(\r\n            <Pagination.Item key={number} active={number === currentPage} onClick={() => setCurrentPage(number)}>\r\n                {number}\r\n            </Pagination.Item>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container className=\"d-flex flex-column\">\r\n            <Row>\r\n                <Col xs={12} className=\"mt-3 d-flex justify-content-center align-items-center\">\r\n                    <div className=\"mr-3\">Filter:</div>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            {filter}\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            {filter === \"all\" ? <Dropdown.Item disabled>All</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"all\")}>All</Dropdown.Item>}\r\n                            {filter === \"completed\" ? <Dropdown.Item disabled>Completed</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"completed\")}>Completed</Dropdown.Item>}\r\n                            {filter === \"not-completed\" ? <Dropdown.Item disabled>Not Completed</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"not-completed\")}>Not Completed</Dropdown.Item>}\r\n                          </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Col>\r\n            </Row>\r\n            <ListGroup>\r\n                {orders.rows?.map( ({id, complete, mobile, createdAt, updatedAt, userId}) =>\r\n                    <ItemOneOrderInAdmin\r\n                        key={id}\r\n                        id={id}\r\n                        complete={complete}\r\n                        mobile={mobile}\r\n                        createdAt={createdAt}\r\n                        updatedAt={updatedAt}\r\n                        userId={userId}\r\n                        reRender={reRender}/>)}\r\n            </ListGroup>\r\n            <Pagination size=\"sm\" className=\"mt-4 mb-4\" style={{margin: \"0 auto\"}}>\r\n                {pages}\r\n            </Pagination>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Orders;"],"mappings":"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"},"metadata":{},"sourceType":"module"}