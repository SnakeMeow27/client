[{"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\index.js":"1","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\App.js":"2","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\reportWebVitals.js":"3","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\AppRouter.js":"4","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\routes.js":"5","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\pages\\Admin.js":"6","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\pages\\Shop.js":"7","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\pages\\ApplicationPage.js":"8","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\utils\\consts.js":"9","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\pages\\Basket.js":"10","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\pages\\Auth.js":"11","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\store\\UserStore.js":"12","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\store\\DeviceStore.js":"13","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\NavBar.js":"14","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\TypeBar.js":"15","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\DeveloperBar.js":"16","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\ApplicationList.js":"17","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\ApplicationItem.js":"18","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateApplication.js":"19","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateType.js":"20","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateDeveloper.js":"21","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\http\\userAPI.js":"22","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\http\\index.js":"23","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\http\\deviceAPI.js":"24","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\Pages.js":"25","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\store\\BasketStore.js":"26","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\oneItemInBasket.js":"27","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\BasketNavBar.js":"28","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\pages\\Orders.js":"29","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\http\\ordersAPI.js":"30","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\pages\\Ordering.js":"31","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\itemOneorderInAdmin.js":"32","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\ratingStars.js":"33","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateLanguage.js":"34","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateOC.js":"35","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateVersion.js":"36","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateDate.js":"37","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateLicense.js":"38","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\DeleteDeveloperOrType.js":"39"},{"size":718,"mtime":1653166185557,"results":"40","hashOfConfig":"41"},{"size":1411,"mtime":1653736544872,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1652039039300,"results":"43","hashOfConfig":"41"},{"size":826,"mtime":1652697983200,"results":"44","hashOfConfig":"41"},{"size":1131,"mtime":1653906775310,"results":"45","hashOfConfig":"41"},{"size":4015,"mtime":1654346275556,"results":"46","hashOfConfig":"41"},{"size":2044,"mtime":1654087435001,"results":"47","hashOfConfig":"41"},{"size":8665,"mtime":1654253878264,"results":"48","hashOfConfig":"41"},{"size":393,"mtime":1653919413217,"results":"49","hashOfConfig":"41"},{"size":1138,"mtime":1653896382668,"results":"50","hashOfConfig":"41"},{"size":2973,"mtime":1654375072087,"results":"51","hashOfConfig":"41"},{"size":420,"mtime":1654085472590,"results":"52","hashOfConfig":"41"},{"size":2841,"mtime":1654337781262,"results":"53","hashOfConfig":"41"},{"size":2201,"mtime":1653738003307,"results":"54","hashOfConfig":"41"},{"size":1216,"mtime":1653989054810,"results":"55","hashOfConfig":"41"},{"size":976,"mtime":1653059792273,"results":"56","hashOfConfig":"41"},{"size":566,"mtime":1652619363052,"results":"57","hashOfConfig":"41"},{"size":1137,"mtime":1653918039812,"results":"58","hashOfConfig":"41"},{"size":6435,"mtime":1654114215986,"results":"59","hashOfConfig":"41"},{"size":1359,"mtime":1652713012843,"results":"60","hashOfConfig":"41"},{"size":1422,"mtime":1652713549308,"results":"61","hashOfConfig":"41"},{"size":704,"mtime":1653736932537,"results":"62","hashOfConfig":"41"},{"size":426,"mtime":1652733069094,"results":"63","hashOfConfig":"41"},{"size":4273,"mtime":1654331037239,"results":"64","hashOfConfig":"41"},{"size":786,"mtime":1652720194279,"results":"65","hashOfConfig":"41"},{"size":2979,"mtime":1653744019940,"results":"66","hashOfConfig":"41"},{"size":3975,"mtime":1654115238458,"results":"67","hashOfConfig":"41"},{"size":832,"mtime":1653751490751,"results":"68","hashOfConfig":"41"},{"size":4066,"mtime":1653757108874,"results":"69","hashOfConfig":"41"},{"size":1018,"mtime":1653915847696,"results":"70","hashOfConfig":"41"},{"size":1348,"mtime":1653916444299,"results":"71","hashOfConfig":"41"},{"size":6704,"mtime":1653907208448,"results":"72","hashOfConfig":"41"},{"size":825,"mtime":1653941062571,"results":"73","hashOfConfig":"41"},{"size":1385,"mtime":1654268116218,"results":"74","hashOfConfig":"41"},{"size":2067,"mtime":1654268496358,"results":"75","hashOfConfig":"41"},{"size":1385,"mtime":1654272862381,"results":"76","hashOfConfig":"41"},{"size":1420,"mtime":1654273938153,"results":"77","hashOfConfig":"41"},{"size":4464,"mtime":1654338473511,"results":"78","hashOfConfig":"41"},{"size":5140,"mtime":1654347203441,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7sxb4t",{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\index.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\App.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\AppRouter.js",["207","208"],[],"import React, {useContext} from 'react';\r\nimport {Routes, Route, Redirect} from \"react-router-dom\";\r\nimport {authRoutes, publicRoutes} from \"../routes\";\r\nimport Shop from \"../pages/Shop\";\r\nimport {SHOP_ROUTE} from \"../utils/consts\";\r\nimport {Context} from \"../index\";\r\n\r\nconst AppRouter = () => {\r\n  const {user} = useContext(Context)\r\n    console.log(user)\r\n    return (\r\n     <Routes>\r\n\r\n            { user.isAuth && authRoutes.map (({path, Component}) =>\r\n                <Route key={path} path={path} element={<Component></Component>} exact/>\r\n            )}\r\n          { publicRoutes.map (({path, Component}) =>\r\n              <Route key={path} path={path} element={<Component></Component>} exact/>\r\n          )}\r\n         <Route path=\"*\" element={<Shop></Shop>}/>\r\n     </Routes>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\routes.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\pages\\Admin.js",["209","210"],[],"import React, {useState} from 'react';\r\nimport {Button, Container} from \"react-bootstrap\";\r\nimport CreateApplication from \"../components/modals/CreateApplication\";\r\nimport CreateDeveloper from \"../components/modals/CreateDeveloper\";\r\nimport CreateType from \"../components/modals/CreateType\";\r\nimport CreateLanguage from \"../components/modals/CreateLanguage\";\r\nimport CreateOC from \"../components/modals/CreateOC\";\r\nimport CreateVersion from \"../components/modals/CreateVersion\";\r\nimport CreateDate from \"../components/modals/CreateDate\";\r\nimport CreateLicense from \"../components/modals/CreateLicense\";\r\nimport DeleteDeveloperOrType from \"../components/modals/DeleteDeveloperOrType\";\r\n\r\n\r\n\r\nconst Admin = () => {\r\n    const [applicationVisible, setApplicationVisible] = useState(false)\r\n    const [typeVisible, setTypeVisible] = useState(false)\r\n    const [developerVisible, setDeveloperVisible] = useState(false)\r\n    const [LanguageVisible, setLanguageVisible] = useState(false)\r\n    const [OCVisible, setOCVisible] = useState(false)\r\n    const [VersionVisible, setVersionVisible] = useState(false)\r\n    const [DateVisible, setDateVisible] = useState(false)\r\n    const [DateLicense, setDateLicense] = useState(false)\r\n    const [deleteDeveloperOrType, setDeleteDeveloperOrType] = useState(false);\r\n\r\n\r\n    const [successMsg, setSuccessMsg] = useState('');\r\n    const [showSuccessMsg, setShowSuccessMsg] = useState(false);\r\n\r\n    const showSuccessMsgFunc = (msg) => {\r\n        setSuccessMsg(msg);\r\n        setShowSuccessMsg(true);\r\n        setTimeout(() => setShowSuccessMsg(false), 5000);\r\n    }\r\n    return (\r\n        <Container className=\"d-flex flex-column\">\r\n            <Button variant={\"outline-dark\"} className=\"mt-4 p-2\" onClick={() => setTypeVisible(true)}>Добавить тип</Button>\r\n            <Button variant={\"outline-dark\"} className=\"mt-4 p-2\"  onClick={() => setDeveloperVisible(true)}>Добавить разработчика</Button>\r\n            <Button variant={\"outline-dark\"} className=\"mt-4 p-2\" onClick={() => setApplicationVisible(true)}>Добавить приложение</Button>\r\n            <Button variant={\"outline-dark\"} className=\"mt-4 p-2\" onClick={() => setLanguageVisible(true)}>Добавить язык</Button>\r\n            <Button variant={\"outline-dark\"} className=\"mt-4 p-2\" onClick={() => setOCVisible(true)}>Добавить операционную систему</Button>\r\n            <Button variant={\"outline-dark\"} className=\"mt-4 p-2\" onClick={() => setVersionVisible(true)}>Добавить версию</Button>\r\n            <Button variant={\"outline-dark\"} className=\"mt-4 p-2\" onClick={() => setDateVisible(true)}>Добавить время действия лицензии</Button>\r\n            <Button variant={\"outline-dark\"} className=\"mt-4 p-2\" onClick={() => setDateLicense(true)}>Добавить лицензию</Button>\r\n            <Button variant={\"outline-dark\"} className=\"mt-4 p-2\" onClick={() => setDeleteDeveloperOrType(true)}>Удаление бренда и разработчика</Button>\r\n\r\n            <CreateApplication show={applicationVisible} onHide={() => setApplicationVisible(false)}/>\r\n            <CreateDeveloper show={developerVisible} onHide={() => setDeveloperVisible(false)}/>\r\n            <CreateType show={typeVisible} onHide={() => setTypeVisible(false)}/>\r\n            <CreateLanguage show={LanguageVisible} onHide={() => setLanguageVisible(false)}/>\r\n            <CreateOC show={OCVisible} onHide={() => setOCVisible(false)}/>\r\n            <CreateVersion show={VersionVisible} onHide={() => setVersionVisible(false)}/>\r\n            <CreateDate show={DateVisible} onHide={() => setDateVisible(false)}/>\r\n           <CreateLicense show={DateLicense} onHide={() => setDateLicense(false)}/>\r\n            <DeleteDeveloperOrType show={deleteDeveloperOrType} onHide={() => setDeleteDeveloperOrType(false)} showSuccessMsgFunc={showSuccessMsgFunc}/>\r\n\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Admin;","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\pages\\Shop.js",["211","212","213"],[],"import React, {useContext, useEffect} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport DeveloperBar from \"../components/DeveloperBar\";\r\nimport ApplicationList from \"../components/ApplicationList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchApplications, fetchDevelopers, fetchTypes} from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Shop = observer(() => {\r\n    const {application} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n      fetchTypes().then(data => application.setTypes(data));\r\n        fetchDevelopers().then(data=> application.setDevelopers(data));\r\n        fetchApplications(null, null, 1, 12).then(data=> {\r\n            application.setApplications(data.rows);\r\n            application.setTotalCount(data.count);\r\n    })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (application.selectedType === \"all\"){\r\n            fetchApplications(null, application.selectedDeveloper.id, application.page, 12). then (data => {\r\n                application.setApplications(data.rows);\r\n                application.setTotalCount(data.count)\r\n            });\r\n        }\r\n\r\n        else {\r\n            fetchApplications(application.selectedType.id, application.selectedDeveloper.id, application.page, 12).then(data=> {\r\n                application.setApplications(data.rows)\r\n                application.setTotalCount(data.count)\r\n            });\r\n        }\r\n\r\n    }, [application.page, application.selectedType, application.selectedDeveloper], );\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar></TypeBar>\r\n                </Col>\r\n                <Col md={9}>\r\n                   <DeveloperBar></DeveloperBar>\r\n                    <ApplicationList></ApplicationList>\r\n                    <Pages></Pages>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\pages\\ApplicationPage.js",["214","215","216","217","218","219","220","221","222"],[],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Button, Card, Col, Container, Dropdown, Form, Image, Modal, Row} from \"react-bootstrap\";\r\n\r\nimport bigStar from '../assets/bigStar.png'\r\nimport {useParams} from 'react-router-dom'\r\nimport {\r\n    addApplicationToBasket,\r\n    addRating,\r\n    checkRating, fetchApplications, fetchDate, fetchDevelopers, fetchLanguage, fetchLicense, fetchOC,\r\n    fetchOneApplication, fetchOneDate, fetchOneVersion, fetchTypes\r\n} from \"../http/deviceAPI\";\r\nimport {Context} from \"../index\";\r\nimport RatingStars from \"../components/ratingStars\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst ApplicationPage = observer(() => {\r\n    const [application, setApplication] = useState({info: []})\r\n    const [application2, setApplication2] = useState({license: []})\r\n    const  [license1, setLisense1] = useState(null)\r\n    const  {id} = useParams()\r\n    const {user, basket} = useContext(Context);\r\n    const [resRate, setResRate] = useState(\"\");\r\n    const [isAccessRating, setSsAccessRating] = useState(false);\r\n    const [dateL, setDateL] = useState()\r\n    const [versionL, setversion] = useState()\r\n    const [OCS, setOC] = useState()\r\n    const [LanguageApp, setLanguageApp] = useState()\r\n    useEffect(() =>{\r\n\r\n        fetchOC(null, id).then((data=> setOC(data)));\r\n        fetchLanguage(null, id).then((data=> setLanguageApp(data)));\r\n    }, [id])\r\n\r\n\r\n\r\n    useEffect(() =>{\r\nfetchOneApplication(id).then(data=>setApplication(data));\r\nfetchOneApplication(id).then(data=>setApplication2(data));\r\n    if(user.isAuth) {\r\n        checkRating({deviceId: id}).then(res => setSsAccessRating(res.allow));\r\n        console.log(\"рейтинг проверен\")\r\n    }\r\n\r\n}, [id, resRate])\r\n\r\n    const isApplicationInBasket = () => {\r\n        const findApplication = basket.Basket.findIndex(item => Number(item.id) === Number(application.id));\r\n        return findApplication < 0;\r\n    }\r\n\r\n    const addApplicationInBasket = (application) => {\r\n\r\n        if(user.isAuth) {\r\n            addApplicationToBasket(application).then(() => basket.setBasket(application, true))\r\n\r\n        } else {\r\n            basket.setBasket(application);\r\n        }\r\n    }\r\n\r\n\r\n    const ratingChanged = (rate) => {\r\n        addRating({\r\n            rate,\r\n            applicationId: id\r\n        }).then(res => {\r\n            setResRate(res);\r\n        });\r\n    };\r\n    function   AppOC ()\r\n    {\r\n        let OCApplication = \"Операционные системы, которые поддерживает приложение: \"\r\n              for (let i =0; i <=  Object.keys(OCS).length -1; i++)\r\n        { OCApplication = OCApplication + OCS[i].OC.name + \" \" + OCS[i].OC.categoryOC + \".   \"\r\n        }\r\n        console.log(OCApplication)\r\n        return OCApplication\r\n    }\r\n\r\n    function   AppLanguage ()\r\n    {\r\n        let LanguageApplication = \"Языки, которые поддерживает приложение: \"\r\n        for (let i =0; i <= Object.keys(LanguageApp).length -1; i++)\r\n        { LanguageApplication = LanguageApplication + LanguageApp[i].language.name + \". \"\r\n        }\r\n        console.log(LanguageApp)\r\n        return LanguageApplication\r\n    }\r\n\r\n\r\n    function ValueLicense(license) {\r\n    setLisense1(license);\r\n  fetchOneDate(license).then((data=>setDateL(data.name)))\r\n  console.log(dateL)\r\n\r\n\r\n}\r\n\r\n    function ValueVersion(version) {\r\n        setLisense1(version);\r\n        fetchOneVersion(version).then((data=>setversion(data.name)))\r\n        console.log(versionL)\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + application.img}></Image>\r\n\r\n                </Col>\r\n                <Col  md={4}>\r\n\r\n                    <Row className=\"d-flex flex-column align-items-center\">\r\n                        <h2>{application.name}</h2>\r\n                        <div className=\"d-flex align-items-center justify-content-center\"\r\n                             style={{background: `url(${bigStar}) no-repeat center center`, width:240, height:240, backgroundSize: 'cover', fontSize:64}}\r\n                        >\r\n                            {application.rating}\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                            <RatingStars\r\n                                ratingChanged={ratingChanged}\r\n                                ratingVal={application?.rating || 0}\r\n                                isAuth={user.isAuth}\r\n                                isAccessRating={isAccessRating}\r\n\r\n                            />\r\n                            {resRate}\r\n                        </div>\r\n\r\n                    </Row>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                <Card className=\"d-flex flex-column align-items-center justify-content-around\"\r\n                style={{width:300, height:300, fontSize:32, border: '5px solid lightgray'}}\r\n                >\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <Dropdown>\r\n                                    <Dropdown.Toggle className={\"btn-secondary\"}>{ dateL|| \"Лицензия\"}</Dropdown.Toggle>\r\n                                    <Dropdown.Menu>\r\n                                        {application2.license.map(license =>\r\n                                            <Dropdown.Item onClick={() =>  ValueLicense(license.DateOfActionId)}\r\n                                                           key={license.id}\r\n                                            >\r\n                                                {\"Код лицензии: \" + license.DateOfActionId}\r\n                                            </Dropdown.Item>\r\n                                        )}\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button   variant=\"outline-dark\" onClick={() => {const LangN = AppLanguage()\r\n                                    alert(LangN)} }>Язык</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <Dropdown>\r\n                                    <Dropdown.Toggle className={\"btn-secondary\"}>{ versionL|| \"Версия\"}</Dropdown.Toggle>\r\n                                    <Dropdown.Menu>\r\n                                        {application2.license.map(version =>\r\n                                            <Dropdown.Item onClick={() =>  ValueVersion(version.VersionId)}\r\n                                                           key={version.id}\r\n                                            >\r\n                                                {\"Код версии: \" + version.VersionId}\r\n                                            </Dropdown.Item>\r\n                                        )}\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button   variant=\"outline-dark\" onClick={() => {const OCN = AppOC ()\r\n                                    alert(OCN)} }>ОС</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <h3>{application.price + \" RUB\"}</h3>\r\n\r\n                    { isApplicationInBasket() ?\r\n                        <Button  variant=\"dark\" onClick={() => addApplicationInBasket(application)}>Добавить в корзину</Button>\r\n                        :\r\n                        <Button variant=\"outline-dark\" disabled>Приложение уже в корзине</Button>\r\n                    }\r\n\r\n                </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n           <Row className=\"d-flex flex-column mt-3\">\r\n               <h1>Характеристики</h1>\r\n               {application.info.map((info, index ) =>\r\n                   <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\r\n                       {info.title}:{info.description}\r\n                   </Row>\r\n               )}\r\n           </Row>\r\n        </Container>\r\n    );\r\n\r\n});\r\n\r\nexport default ApplicationPage;","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\utils\\consts.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\pages\\Basket.js",["223"],[],"import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nimport {Context} from \"../index\";\r\nimport {Button, Col, Image, Row} from \"react-bootstrap\";\r\nimport OneItemInBasket from \"../components/oneItemInBasket\";\r\nimport {ORDERING_ROUTE} from \"../utils/consts\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Basket = observer(() => {\r\n    const {basket} = useContext(Context);\r\n\r\n    if(basket.Basket.length === 0) {\r\n        return (\r\n            <div className=\"d-flex flex-column align-items-center mt-5\">\r\n\r\n                <div className=\"text-center mt-5\" style={{fontSize: 28}}><b>Корзина пуста</b></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <br/>\r\n            <NavLink to={ORDERING_ROUTE}>\r\n                <Button>Checkout</Button>\r\n            </NavLink>\r\n            <Row className=\"mt-3\">\r\n                <Col xs={12}>\r\n                    {basket.Basket.map(application => <OneItemInBasket key={application.id} application={application}/>)}\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Basket;","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\pages\\Auth.js",["224"],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\store\\UserStore.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\store\\DeviceStore.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\NavBar.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\TypeBar.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\DeveloperBar.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\ApplicationList.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\ApplicationItem.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateApplication.js",["225","226","227","228"],[],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Button, Col, Dropdown, Form, FormControl, Modal, Row} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport app from \"../../App\";\r\nimport {createApplication, fetchApplications, fetchDevelopers, fetchTypes} from \"../../http/deviceAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateApplication = observer(({show, onHide}) => {\r\n   const {application} = useContext(Context)\r\n   const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [file, setFile] = useState(null)\r\n    const [info, setInfo] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data=> application.setTypes(data))\r\n        fetchDevelopers().then(data=> application.setDevelopers(data))\r\n    }, [])\r\n\r\n\r\n    const addInfo = () => {\r\n      setInfo([...info, {title: '', description: '', number: Date.now()}])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i=>i.number !== number))\r\n    }\r\n   const changeInfo = (key, value, number) =>{\r\n       setInfo(info.map(i=> i.number === number ? {...i, [key]:value} : i))\r\n   }\r\n\r\n    const selectFile = e => {\r\n       setFile(e.target.files[0])\r\n    }\r\n\r\n    const addApplication = () => {\r\n       const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('price', `${price}`)\r\n        formData.append('img', file)\r\n        formData.append('developerId', application.selectedDeveloper.id)\r\n        formData.append('typeId', application.selectedType.id)\r\n        formData.append('info', JSON.stringify(info))\r\n        createApplication(formData).then(data => onHide())\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить приложение\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle  className={\"btn-secondary\"}>{application.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {application.types.map(type =>\r\n                           <Dropdown.Item onClick={() => application.setSelectedType(type)}\r\n                                          key={type.id}\r\n                           >\r\n                               {type.name}\r\n                           </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle  className={\"btn-secondary\"}>{application.selectedDeveloper.name || \"Выберите разработчика\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {application.developers.map(developer =>\r\n                                <Dropdown.Item onClick={() => application.setSelectedDeveloper(developer)}\r\n                                               key={developer.id}\r\n                                >\r\n                                    {developer.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-2\"\r\n                        placeholder=\"Введите название приложения\">\r\n                    </Form.Control>\r\n                    <Form.Control\r\n                        value={price}\r\n                        onChange={e => setPrice(Number(e.target.value))}\r\n                        className=\"mt-2\"\r\n                        placeholder=\"Введите стоимость приложения\"\r\n                        type=\"number\"\r\n\r\n                    >\r\n                    </Form.Control>\r\n                    <Form.Control\r\n                        className=\"mt-2\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    >\r\n                    </Form.Control>\r\n                    <hr/>\r\n                    <Button\r\n                    variant=\"outline-dark\"\r\n                    onClick={addInfo}\r\n                    >\r\n                        Добавить новое свойство\r\n                    </Button>\r\n                    {info.map(i =>\r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.title}\r\n                                    onChange={(e)=>changeInfo('title', e.target.value, i.number)}\r\n                                    placeholder=\"Введите название свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    onChange={(e)=>changeInfo('description', e.target.value, i.number)}\r\n                                    value={i.description}\r\n                                    placeholder=\"Введите описание свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button\r\n                                    onClick={() => removeInfo(i.number)}\r\n                                    variant={\"outline-danger\"}\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addApplication}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateApplication;","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateType.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateDeveloper.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\http\\userAPI.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\http\\index.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\http\\deviceAPI.js",["229"],[],"import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type)\r\n    return data\r\n}\r\nexport const createLanguage = async (language) => {\r\n    const {data} = await $authHost.post('api/language', language)\r\n    return data\r\n}\r\nexport const createVersion = async (version) => {\r\n    const {data} = await $authHost.post('api/version', version)\r\n    return data\r\n}\r\nexport const createDate = async (date) => {\r\n    const {data} = await $authHost.post('api/dateL', date)\r\n    return data\r\n}\r\nexport const createOC = async (oc) => {\r\n    const {data} = await $authHost.post('api/OC', oc)\r\n    return data\r\n}\r\nexport const createLicense = async (license) => {\r\n    const {data} = await $authHost.post('api/license', license)\r\n    return data\r\n}\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type')\r\n    return data\r\n}\r\nexport const fetchVersion = async () => {\r\n    const {data} = await $host.get('api/version')\r\n    return data\r\n}\r\nexport const fetchDate = async () => {\r\n    const {data} = await $host.get('api/dateL')\r\n    return data\r\n}\r\nexport const deleteType = async (id) => {\r\n    const {data} = await $authHost({method:'DELETE', url:'api/type/'+id});\r\n    return data;\r\n}\r\nexport const createDeveloper = async (developer) => {\r\n    const {data} = await $authHost.post('api/developer', developer)\r\n    return data\r\n}\r\nexport const deleteDelevoper = async (id) => {\r\n    const {data} = await $authHost({method:'DELETE', url:'api/developer/'+id});\r\n    return data;\r\n}\r\nexport const fetchDevelopers= async () => {\r\n    const {data} = await $host.get('api/developer', )\r\n    return data\r\n}\r\nexport const fetchLicense = async () => {\r\n    const {data} = await $host.get('api/license', )\r\n    return data\r\n}\r\n\r\nexport const fetchOneDate = async (id) => {\r\n    const {data} = await $host.get('api/dateL/' + id)\r\n    return data\r\n}\r\nexport const createApplication = async (application) => {\r\n    const {data} = await $authHost.post('api/application', application)\r\n    return data\r\n}\r\n\r\nexport const fetchApplications = async (typeId, developerId, page, limit= 4) => {\r\n    const {data} = await $host.get('api/application', {params: {\r\n            typeId, developerId, page, limit\r\n        }})\r\n    return data\r\n}\r\nexport const fetchOC = async (OCId, applicationId) => {\r\n    const {data} = await $host.get('api/OC', {params: {\r\n            OCId, applicationId\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchLanguage = async (LangId, applicationId) => {\r\n    const {data} = await $host.get('api/language', {params: {\r\n            LangId, applicationId\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneApplication = async (id) => {\r\n    const {data} = await $host.get('api/application/' + id)\r\n    return data\r\n}\r\nexport const fetchOneVersion= async (id) => {\r\n    const {data} = await $host.get('api/version/' + id)\r\n    return data\r\n}\r\n\r\n\r\nexport const fetchDeleteApplication = async (id) => {\r\n    const {data} = await $authHost({method:'DELETE', url:`api/dapplication/${id}`});\r\n    return data;\r\n}\r\n\r\nexport const updateApplication = async (id, body) => {\r\n    const {data} = await $authHost({method:'PUT', url:`api/application/${id}`, data: body});\r\n    return data;\r\n}\r\n\r\nexport const getAllDevicesInAdminPage = async (name, page = 1, filter = \"All\") => {\r\n    const {data} = await $authHost({method:'GET', url:`api/application/search?page=${page}&name=${name}&filter=${filter}`});\r\n    return data;\r\n}\r\n\r\nexport const addApplicationToBasket = async (application) => {\r\n    const {data} = await $authHost.post('api/basket', application);\r\n    return data;\r\n}\r\n\r\nexport const getDeviceFromBasket = async () => {\r\n    const {data} = await $authHost.get('api/basket');\r\n    return data;\r\n}\r\n\r\nexport const deleteDeviceFromBasket = async (id) => {\r\n    const {data} = await $authHost.delete(`api/basket/${id}`);\r\n    return data;\r\n}\r\n\r\nexport const addRating = async (body) => {\r\n    const {data} = await $authHost.post('api/rating', body);\r\n    return data;\r\n}\r\n\r\nexport const checkRating = async (body) => {\r\n    const {data} = await $authHost.post('api/rating/check-rating', body);\r\n    return data;\r\n}","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\Pages.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\store\\BasketStore.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\oneItemInBasket.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\BasketNavBar.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\pages\\Orders.js",["230"],[],"import React, {useEffect, useState} from 'react';\r\nimport {Col, Container, Dropdown, ListGroup, Pagination, Row, Spinner} from \"react-bootstrap\";\r\nimport {fetchOrders} from \"../http/ordersAPI\";\r\nimport ItemOneOrderInAdmin from \"../components/itemOneorderInAdmin\";\r\n\r\nconst Orders = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [orders, setOrders] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [filter, setFilter] = useState(\"All\");\r\n    const [rerender, setRerender] = useState(false);\r\n\r\n    //pagination\r\n    const limit = 5;\r\n    const pageCount = Math.ceil(Number(count) / limit);\r\n    const pages = [];\r\n\r\n    useEffect(() => {\r\n        fetchOrders({limit, page: 1}).then(data => {\r\n            setOrders(data);\r\n            setLoading(false);\r\n            setCount(data.count);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetchOrders({limit, page: currentPage}).then(data => {\r\n            setOrders(data);\r\n            setLoading(false);\r\n        })\r\n    }, [currentPage]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetchOrders({limit, page: 1, complete: filter}).then(data => {\r\n            setOrders(data);\r\n            setLoading(false);\r\n            setCount(data.count);\r\n            setCurrentPage(1);\r\n        })\r\n    }, [filter]);\r\n\r\n    //re-render after change status, or delete some order\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetchOrders({limit, page: currentPage, complete: filter}).then(data => {\r\n            setOrders(data);\r\n            setLoading(false);\r\n            setCount(data.count);\r\n            setCurrentPage(1);\r\n        })\r\n    }, [rerender]);\r\n\r\n    const reRender = () => {\r\n        setRerender(!rerender);\r\n    }\r\n\r\n    if(loading) {\r\n        return <Spinner animation=\"grow\"/>\r\n    }\r\n\r\n    for (let number = 1; number < pageCount + 1; number++) {\r\n        pages.push(\r\n            <Pagination.Item key={number} active={number === currentPage} onClick={() => setCurrentPage(number)}>\r\n                {number}\r\n            </Pagination.Item>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container className=\"d-flex flex-column\">\r\n            <Row>\r\n                <Col xs={12} className=\"mt-3 d-flex justify-content-center align-items-center\">\r\n                    <div className=\"mr-3\">Filter:</div>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            {filter}\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            {filter === \"all\" ? <Dropdown.Item disabled>All</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"all\")}>All</Dropdown.Item>}\r\n                            {filter === \"completed\" ? <Dropdown.Item disabled>Completed</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"completed\")}>Completed</Dropdown.Item>}\r\n                            {filter === \"not-completed\" ? <Dropdown.Item disabled>Not Completed</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"not-completed\")}>Not Completed</Dropdown.Item>}\r\n                          </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Col>\r\n            </Row>\r\n            <ListGroup>\r\n                {orders.rows?.map( ({id, complete, mobile, createdAt, updatedAt, userId}) =>\r\n                    <ItemOneOrderInAdmin\r\n                        key={id}\r\n                        id={id}\r\n                        complete={complete}\r\n                        mobile={mobile}\r\n                        createdAt={createdAt}\r\n                        updatedAt={updatedAt}\r\n                        userId={userId}\r\n                        reRender={reRender}/>)}\r\n            </ListGroup>\r\n            <Pagination size=\"sm\" className=\"mt-4 mb-4\" style={{margin: \"0 auto\"}}>\r\n                {pages}\r\n            </Pagination>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Orders;","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\http\\ordersAPI.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\pages\\Ordering.js",["231","232","233","234"],[],"import React, {useContext, useState} from 'react';\r\nimport {Button, Col, Form, Image, Row} from \"react-bootstrap\";\r\nimport {Context} from \"../index\";\r\nimport {sendOrder} from \"../http/ordersAPI\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {SHOP_ROUTE} from \"../utils/consts\";\r\nimport emptyBasket from \"../assets/emptyBasket.jpg\";\r\n\r\nconst Ordering = () => {\r\n    const {basket, user} = useContext(Context);\r\n    const history = useNavigate();\r\n\r\n    const buy = () => {\r\n        let order = {\r\n            basket: basket.Basket\r\n        }\r\n\r\n        if(user.isAuth) {\r\n            order.auth = true;\r\n        }\r\n\r\n        sendOrder(order).then(data => {\r\n            console.log(data);\r\n            basket.setDeleteAllDeviceFromBasket();\r\n            history(SHOP_ROUTE);\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"d-flex flex-column align-items-center mt-5\">\r\n\r\n                <div className=\"text-center mt-5\" style={{fontSize: 18}}><b>Заказ сформирован. Ожидается оплата.</b></div>\r\n            </div>\r\n            <Row className=\"text-center mt-5\">\r\n                <Col    xs={12}>\r\n                    <Button variant=\"secondary\" onClick={buy}>Оплатить</Button>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Ordering;","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\itemOneorderInAdmin.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\ratingStars.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateLanguage.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateOC.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateVersion.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateDate.js",[],[],"C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\CreateLicense.js",["235","236","237","238"],[],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Button, Col, Container, Dropdown, Form, Modal, Row} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport app from \"../../App\";\r\nimport {\r\n    createApplication, createLicense,\r\n    fetchApplications,\r\n    fetchDate,\r\n    fetchVersion\r\n} from \"../../http/deviceAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateLicense = observer(({show, onHide}) => {\r\n    const {application} = useContext(Context)\r\n    const [name, setName] = useState('')\r\n    const [apps, setApps] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        fetchVersion().then(data=> application.setVersion(data))\r\n        fetchDate().then(data=> application.setDate(data))\r\n    }, [])\r\n\r\n    const addLicense = () => {\r\n        const formData = new FormData()\r\n        formData.append('licenseApp', name)\r\n        formData.append('applicationId', apps)\r\n        formData.append('VersionId', application.selectedVersion.id)\r\n        formData.append('DateOfActionId', application.selectedDate.id)\r\n\r\n        createLicense(formData).then(data => onHide())\r\n\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить лицензию\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n\r\n                    <Form.Control\r\n                        value={apps}\r\n                        onChange={e => setApps(e.target.value)}\r\n                        className=\"mt-2\"\r\n                        placeholder=\"Введите код приложения\">\r\n                    </Form.Control>\r\n\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <Dropdown>\r\n                                    <Dropdown.Toggle  className={\"btn-secondary\"}>{application.selectedDate.name || \"Выберите время действия\"}</Dropdown.Toggle>\r\n                                    <Dropdown.Menu>\r\n                                        {application.dates.map(date =>\r\n                                            <Dropdown.Item onClick={() => application.setSelectedDate(date)}\r\n                                                           key={date.id}\r\n                                            >\r\n                                                {date.name}\r\n                                            </Dropdown.Item>\r\n                                        )}\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </Col>\r\n                            <Col>\r\n                                <Dropdown>\r\n                                    <Dropdown.Toggle  className={\"btn-secondary\"}>{application.selectedVersion.name || \"Выберите версию\"}</Dropdown.Toggle>\r\n                                    <Dropdown.Menu>\r\n                                        {application.versions.map(version =>\r\n                                            <Dropdown.Item onClick={() => application.setSelectedVersion(version)}\r\n                                                           key={version.id}\r\n                                            >\r\n                                                {version.name}\r\n                                            </Dropdown.Item>\r\n                                        )}\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-2\"\r\n                        placeholder=\"Введите название лицензии\">\r\n                    </Form.Control>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addLicense}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateLicense;","C:\\Users\\danak\\WebstormProjects\\untitled\\client\\src\\components\\modals\\DeleteDeveloperOrType.js",[],[],{"ruleId":"239","severity":1,"message":"240","line":2,"column":24,"nodeType":"241","messageId":"242","endLine":2,"endColumn":32},{"ruleId":"239","severity":1,"message":"243","line":5,"column":9,"nodeType":"241","messageId":"242","endLine":5,"endColumn":19},{"ruleId":"239","severity":1,"message":"244","line":27,"column":12,"nodeType":"241","messageId":"242","endLine":27,"endColumn":22},{"ruleId":"239","severity":1,"message":"245","line":28,"column":12,"nodeType":"241","messageId":"242","endLine":28,"endColumn":26},{"ruleId":"246","severity":1,"message":"247","line":21,"column":8,"nodeType":"248","endLine":21,"endColumn":10,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":25,"column":13,"nodeType":"252","messageId":"253","endLine":25,"endColumn":98,"fix":"254"},{"ruleId":"246","severity":1,"message":"247","line":38,"column":8,"nodeType":"248","endLine":38,"endColumn":83,"suggestions":"255"},{"ruleId":"239","severity":1,"message":"256","line":2,"column":49,"nodeType":"241","messageId":"242","endLine":2,"endColumn":53},{"ruleId":"239","severity":1,"message":"257","line":2,"column":62,"nodeType":"241","messageId":"242","endLine":2,"endColumn":67},{"ruleId":"239","severity":1,"message":"258","line":9,"column":18,"nodeType":"241","messageId":"242","endLine":9,"endColumn":35},{"ruleId":"239","severity":1,"message":"259","line":9,"column":37,"nodeType":"241","messageId":"242","endLine":9,"endColumn":46},{"ruleId":"239","severity":1,"message":"260","line":9,"column":48,"nodeType":"241","messageId":"242","endLine":9,"endColumn":63},{"ruleId":"239","severity":1,"message":"261","line":9,"column":80,"nodeType":"241","messageId":"242","endLine":9,"endColumn":92},{"ruleId":"239","severity":1,"message":"262","line":10,"column":57,"nodeType":"241","messageId":"242","endLine":10,"endColumn":67},{"ruleId":"239","severity":1,"message":"263","line":19,"column":13,"nodeType":"241","messageId":"242","endLine":19,"endColumn":21},{"ruleId":"246","severity":1,"message":"264","line":44,"column":4,"nodeType":"248","endLine":44,"endColumn":17,"suggestions":"265"},{"ruleId":"239","severity":1,"message":"266","line":5,"column":22,"nodeType":"241","messageId":"242","endLine":5,"endColumn":27},{"ruleId":"239","severity":1,"message":"267","line":27,"column":16,"nodeType":"241","messageId":"242","endLine":27,"endColumn":20},{"ruleId":"239","severity":1,"message":"268","line":2,"column":38,"nodeType":"241","messageId":"242","endLine":2,"endColumn":49},{"ruleId":"239","severity":1,"message":"269","line":4,"column":8,"nodeType":"241","messageId":"242","endLine":4,"endColumn":11},{"ruleId":"239","severity":1,"message":"258","line":5,"column":28,"nodeType":"241","messageId":"242","endLine":5,"endColumn":45},{"ruleId":"246","severity":1,"message":"247","line":18,"column":8,"nodeType":"248","endLine":18,"endColumn":10,"suggestions":"270"},{"ruleId":"239","severity":1,"message":"271","line":2,"column":8,"nodeType":"241","messageId":"242","endLine":2,"endColumn":18},{"ruleId":"246","severity":1,"message":"272","line":54,"column":8,"nodeType":"248","endLine":54,"endColumn":18,"suggestions":"273"},{"ruleId":"239","severity":1,"message":"274","line":1,"column":28,"nodeType":"241","messageId":"242","endLine":1,"endColumn":36},{"ruleId":"239","severity":1,"message":"256","line":2,"column":22,"nodeType":"241","messageId":"242","endLine":2,"endColumn":26},{"ruleId":"239","severity":1,"message":"266","line":2,"column":28,"nodeType":"241","messageId":"242","endLine":2,"endColumn":33},{"ruleId":"239","severity":1,"message":"275","line":7,"column":8,"nodeType":"241","messageId":"242","endLine":7,"endColumn":19},{"ruleId":"239","severity":1,"message":"269","line":4,"column":8,"nodeType":"241","messageId":"242","endLine":4,"endColumn":11},{"ruleId":"239","severity":1,"message":"276","line":6,"column":5,"nodeType":"241","messageId":"242","endLine":6,"endColumn":22},{"ruleId":"239","severity":1,"message":"258","line":7,"column":5,"nodeType":"241","messageId":"242","endLine":7,"endColumn":22},{"ruleId":"246","severity":1,"message":"247","line":22,"column":8,"nodeType":"248","endLine":22,"endColumn":10,"suggestions":"277"},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'SHOP_ROUTE' is defined but never used.","'successMsg' is assigned a value but never used.","'showSuccessMsg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'application'. Either include it or remove the dependency array.","ArrayExpression",["278"],"no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"279","text":"280"},["281"],"'Form' is defined but never used.","'Modal' is defined but never used.","'fetchApplications' is defined but never used.","'fetchDate' is defined but never used.","'fetchDevelopers' is defined but never used.","'fetchLicense' is defined but never used.","'fetchTypes' is defined but never used.","'license1' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.isAuth'. Either include it or remove the dependency array.",["282"],"'Image' is defined but never used.","'data' is assigned a value but never used.","'FormControl' is defined but never used.","'app' is defined but never used.",["283"],"'jwt_decode' is defined but never used.","React Hook useEffect has missing dependencies: 'currentPage' and 'filter'. Either include them or remove the dependency array.",["284"],"'useState' is defined but never used.","'emptyBasket' is defined but never used.","'createApplication' is defined but never used.",["285"],{"desc":"286","fix":"287"},[1065,1067],".",{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"286","fix":"292"},{"desc":"293","fix":"294"},{"desc":"286","fix":"295"},"Update the dependencies array to be: [application]",{"range":"296","text":"297"},"Update the dependencies array to be: [application.page, application.selectedType, application.selectedDeveloper, application]",{"range":"298","text":"299"},"Update the dependencies array to be: [id, resRate, user.isAuth]",{"range":"300","text":"301"},{"range":"302","text":"297"},"Update the dependencies array to be: [currentPage, filter, rerender]",{"range":"303","text":"304"},{"range":"305","text":"297"},[894,896],"[application]",[1520,1595],"[application.page, application.selectedType, application.selectedDeveloper, application]",[1710,1723],"[id, resRate, user.isAuth]",[808,810],[1756,1766],"[currentPage, filter, rerender]",[745,747]]